{"version":3,"sources":["components/CounterControl/CounterControl.js","components/CounterOutput/CounterOutput.js","store/action.js","containers/Counter/Counter.js","App.js","store/reducers/counter.js","store/reducers/result.js","index.js"],"names":["CounterControl","ctr","clicked","label","onClick","CounterOutput","className","value","INCREMENT","DECREMENT","ADD","SUBSTRACT","STORE_RESULT","DELETE_RESULT","Counter","this","props","onIncrementCounter","onDecrementCounter","onAddCounter","onSubstractCounter","onStoreResults","storedResults","map","strResult","onDeleteResults","id","class","Component","connect","state","counter","res","results","dispatch","type","actionTypes","val","result","resultElid","App","initialState","reducer","action","console","log","newState","Object","assign","concat","Date","updatedArray","filter","rootReducer","combineReducers","CounterReducer","ResultReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f32e9c3.chunk.js","sourcesContent":["const CounterControl = (ctr) =>{\r\n  \r\n  const {clicked,label} = ctr\r\n    return(\r\n    <button onClick = {clicked}>{label}</button>\r\n    )\r\n}\r\nexport default CounterControl","const CounterOutput = (ctr) => {\r\n\r\n    return (\r\n     <div className=\"nav\">\r\n     <p>Current Counter :   {ctr.value}</p>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default CounterOutput","export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const ADD = 'ADD';\r\nexport const SUBSTRACT = 'SUBSTRACT';\r\nexport const STORE_RESULT = 'STORE_RESULT';\r\nexport const DELETE_RESULT = 'DELETE_RESULT';","import React , {Component} from 'react'\r\nimport { connect} from 'react-redux';\r\n\r\nimport CounterControl from '../../components/CounterControl/CounterControl'\r\nimport CounterOutput from '../../components/CounterOutput/CounterOutput'\r\n\r\nimport * as actionTypes from '../../store/action'\r\n\r\n\r\nclass Counter extends Component{\r\n    // state = {\r\n    //     counter : 0\r\n    // }\r\n   \r\n    \r\n    render(){\r\n        \r\n     return (\r\n         <div>\r\n         <CounterOutput value={this.props.ctr}/>\r\n         <div className=\"btns\">\r\n         <CounterControl label = \"Increment\" clicked = {this.props.onIncrementCounter}/>\r\n         <CounterControl label = \"Decrement\" clicked = {this.props.onDecrementCounter}/>\r\n         <CounterControl label = \"Add 10\" clicked = {this.props.onAddCounter}/>\r\n         <CounterControl label = \"Substract 15\" clicked = {this.props.onSubstractCounter}/>\r\n         </div>\r\n         <hr/>\r\n         <button className=\"store\" onClick = {() => this.props.onStoreResults(this.props.ctr)}>storedResults</button>\r\n         <ul>\r\n        \r\n         {  this.props.storedResults.map(strResult => {\r\n             return (\r\n         \r\n            <li\r\n            key= {strResult.id}\r\n            onClick = {() => this.props.onDeleteResults(strResult.id)} >\r\n           <span> Previous Value {strResult.value} </span>\r\n            <span class=\"tooltiptext\">Do you want to delete this ?</span>\r\n            </li>\r\n         )  } \r\n         )}\r\n        \r\n         </ul>\r\n         </div>\r\n     )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ctr : state.ctr.counter,\r\n        storedResults: state.res.results\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n       onIncrementCounter: () => dispatch({type: actionTypes.INCREMENT}),\r\n       onDecrementCounter: () => dispatch({type: actionTypes.DECREMENT}),\r\n       onAddCounter: () => dispatch({type: actionTypes.ADD,val : 10}),\r\n       onSubstractCounter: () => dispatch({type: actionTypes.SUBSTRACT,val : 15}),\r\n       onStoreResults: (result) => dispatch({type:actionTypes.STORE_RESULT , result:result}),\r\n       onDeleteResults: (id) => dispatch({type: actionTypes.DELETE_RESULT,resultElid:id})\r\n   }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Counter);\r\n","import React from 'react'\nimport Counter from './containers/Counter/Counter'\nexport function App() {\n\n\n  return (\n    <div className=\"App\">\n   <Counter/>\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../action'\r\n\r\nconst initialState = {\r\n    counter : 0,\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    console.log(state);\r\n    \r\n    switch(action.type) {\r\n        case actionTypes.INCREMENT:\r\n            const newState = Object.assign({},state);\r\n            newState.counter = state.counter + 1;\r\n            return newState;\r\n\r\n        case actionTypes.DECREMENT:\r\n            return{\r\n                ...state,\r\n                counter : state.counter-1\r\n            }\r\n        case actionTypes.ADD:\r\n            return{\r\n                ...state,\r\n                counter: state.counter + action.val\r\n            }\r\n        case actionTypes.SUBSTRACT:\r\n            return{\r\n                ...state,\r\n                counter : state.counter - action.val\r\n            }\r\n        \r\n    }\r\n   return state;\r\n};\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../action'\r\n\r\nconst initialState = {\r\n    \r\n    results : []\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    console.log(state);\r\n    \r\n    switch(action.type) {\r\n      \r\n        case actionTypes.STORE_RESULT:\r\n            return{\r\n                ...state,\r\n                results:  state.results.concat({id: new Date() , value: action.result})\r\n            }\r\n        case actionTypes.DELETE_RESULT:\r\n           const updatedArray = state.results.filter((result) => result.id !== action.resultElid)\r\n           return{\r\n               ...state,\r\n               results: updatedArray\r\n           }\r\n    }\r\n   return state;\r\n};\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore ,combineReducers} from 'redux';\nimport {Provider} from 'react-redux'\nimport CounterReducer from './store/reducers/counter'\nimport ResultReducer from './store/reducers/result'\n\nconst rootReducer = combineReducers({\n  ctr: CounterReducer,\n  res : ResultReducer\n})\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store = {store}>\n  <App />\n  \n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}